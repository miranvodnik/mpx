/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#pragma once

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define FTP_USE_WORKING_DIR (1 << 0)
#define FTP_STORE_UNIQUE (1 << 1)
#define FTP_REGEX_TEMPLATE (1 << 2)
#define FTP_PROTECT_EXISTING_FILE (1 << 3)
#define FTP_CHECK_FILE_SIZE (1 << 4)
#define FTP_TEXT_FILE_TRANSFER (1 << 5)
#define FTP_REMOVE_SOURCE_FILE (1 << 6)
#define FTP_NAME_LISTING (1 << 7)
#define FTP_RESOLVED (1 << 8)
#define FTP_RECURSIVE_OPERATION (1 << 9)
#define FTP_DESTRUCTIVE_OPERATION (1 << 10)
#define FTP_SSH_OPERATION (1 << 11)

enum FtpRequestCode {
	FirstRequest = 0,
	CheckConnectivity = 1,
	MakeDir = 2,
	GetDir = 3,
	StoreFile = 4,
	StoreAllFiles = 5,
	RetrieveFile = 6,
	RetrieveAllFiles = 7,
	DeleteFile = 8,
	DeleteAllFiles = 9,
	MakeWorkingEnv = 10,
	CleanDir = 11,
	LastRequest = 12,
};
typedef enum FtpRequestCode FtpRequestCode;

enum FtpExceptionAction {
	FirstExceptionAction = 0,
	ExceptionAllow = 1,
	ExceptionDeny = 2,
	LastExceptionAction = 3,
};
typedef enum FtpExceptionAction FtpExceptionAction;

struct ExceptionFileList {
	FtpExceptionAction action;
	struct ExceptionFileList *next;
	char *fileNameTemplate;
};
typedef struct ExceptionFileList ExceptionFileList;

struct FtpConnectionInfo {
	char *hostname;
	char *user;
	char *password;
	char *authentication;
	int flags;
};
typedef struct FtpConnectionInfo FtpConnectionInfo;

struct CheckConnectivityRequest {
	int dummy;
};
typedef struct CheckConnectivityRequest CheckConnectivityRequest;

struct MakeDirRequest {
	char *remoteDirName;
};
typedef struct MakeDirRequest MakeDirRequest;

struct GetDirRequest {
	char *remoteDirName;
};
typedef struct GetDirRequest GetDirRequest;

struct StoreFileRequest {
	char *localDirName;
	char *localFileName;
	char *remoteDirName;
	char *remoteFileName;
	char *workingDirName;
};
typedef struct StoreFileRequest StoreFileRequest;

struct RetrieveFileRequest {
	char *localDirName;
	char *localFileName;
	char *remoteDirName;
	char *remoteFileName;
	char *workingDirName;
};
typedef struct RetrieveFileRequest RetrieveFileRequest;

struct StoreAllFilesRequest {
	char *localDirName;
	char *remoteDirName;
	char *workingDirName;
	ExceptionFileList *exceptions;
};
typedef struct StoreAllFilesRequest StoreAllFilesRequest;

struct RetrieveAllFilesRequest {
	char *localDirName;
	char *remoteDirName;
	char *workingDirName;
	ExceptionFileList *exceptions;
};
typedef struct RetrieveAllFilesRequest RetrieveAllFilesRequest;

struct DeleteFileRequest {
	char *remoteDirName;
	char *remoteFileName;
};
typedef struct DeleteFileRequest DeleteFileRequest;

struct DeleteAllFilesRequest {
	char *remoteDirName;
	ExceptionFileList *exceptions;
};
typedef struct DeleteAllFilesRequest DeleteAllFilesRequest;

struct MakeWorkingEnvRequest {
	char *remoteDirName;
	char *workingDirName;
};
typedef struct MakeWorkingEnvRequest MakeWorkingEnvRequest;

struct CleanDirRequest {
	char *remoteDirName;
};
typedef struct CleanDirRequest CleanDirRequest;

struct EmptyFtpRequest {
	int empty;
};
typedef struct EmptyFtpRequest EmptyFtpRequest;

struct FtpRequestUnion {
	FtpRequestCode requestCode;
	union {
		EmptyFtpRequest empty;
		CheckConnectivityRequest checkConnectivity;
		MakeDirRequest makeDir;
		GetDirRequest getDir;
		StoreFileRequest storeFile;
		StoreAllFilesRequest storeAllFiles;
		RetrieveFileRequest retrieveFile;
		RetrieveAllFilesRequest retrieveAllFiles;
		DeleteFileRequest deleteFile;
		DeleteAllFilesRequest deleteAllFiles;
		MakeWorkingEnvRequest makeWorkingEnv;
		CleanDirRequest cleanDir;
	} FtpRequestUnion_u;
};
typedef struct FtpRequestUnion FtpRequestUnion;

struct FtpRequest {
	int id;
	FtpConnectionInfo connection;
	int flags;
	FtpRequestUnion request;
};
typedef struct FtpRequest FtpRequest;

extern void dump_FtpRequest (FtpRequest *req, char* msg);


/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_FtpRequestCode (XDR *, FtpRequestCode*);
extern  bool_t xdr_FtpExceptionAction (XDR *, FtpExceptionAction*);
extern  bool_t xdr_ExceptionFileList (XDR *, ExceptionFileList*);
extern  bool_t xdr_FtpConnectionInfo (XDR *, FtpConnectionInfo*);
extern  bool_t xdr_CheckConnectivityRequest (XDR *, CheckConnectivityRequest*);
extern  bool_t xdr_MakeDirRequest (XDR *, MakeDirRequest*);
extern  bool_t xdr_GetDirRequest (XDR *, GetDirRequest*);
extern  bool_t xdr_StoreFileRequest (XDR *, StoreFileRequest*);
extern  bool_t xdr_RetrieveFileRequest (XDR *, RetrieveFileRequest*);
extern  bool_t xdr_StoreAllFilesRequest (XDR *, StoreAllFilesRequest*);
extern  bool_t xdr_RetrieveAllFilesRequest (XDR *, RetrieveAllFilesRequest*);
extern  bool_t xdr_DeleteFileRequest (XDR *, DeleteFileRequest*);
extern  bool_t xdr_DeleteAllFilesRequest (XDR *, DeleteAllFilesRequest*);
extern  bool_t xdr_MakeWorkingEnvRequest (XDR *, MakeWorkingEnvRequest*);
extern  bool_t xdr_CleanDirRequest (XDR *, CleanDirRequest*);
extern  bool_t xdr_EmptyFtpRequest (XDR *, EmptyFtpRequest*);
extern  bool_t xdr_FtpRequestUnion (XDR *, FtpRequestUnion*);
extern  bool_t xdr_FtpRequest (XDR *, FtpRequest*);

#else /* K&R C */
extern bool_t xdr_FtpRequestCode ();
extern bool_t xdr_FtpExceptionAction ();
extern bool_t xdr_ExceptionFileList ();
extern bool_t xdr_FtpConnectionInfo ();
extern bool_t xdr_CheckConnectivityRequest ();
extern bool_t xdr_MakeDirRequest ();
extern bool_t xdr_GetDirRequest ();
extern bool_t xdr_StoreFileRequest ();
extern bool_t xdr_RetrieveFileRequest ();
extern bool_t xdr_StoreAllFilesRequest ();
extern bool_t xdr_RetrieveAllFilesRequest ();
extern bool_t xdr_DeleteFileRequest ();
extern bool_t xdr_DeleteAllFilesRequest ();
extern bool_t xdr_MakeWorkingEnvRequest ();
extern bool_t xdr_CleanDirRequest ();
extern bool_t xdr_EmptyFtpRequest ();
extern bool_t xdr_FtpRequestUnion ();
extern bool_t xdr_FtpRequest ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

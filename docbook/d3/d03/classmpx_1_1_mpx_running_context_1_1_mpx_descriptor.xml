<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor">
<title>mpx::MpxRunningContext::MpxDescriptor class Reference</title>
<para>Inheritance diagram for mpx::MpxRunningContext::MpxDescriptor</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="../../df/d5e/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for mpx::MpxRunningContext::MpxDescriptor</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="../../d5/d9a/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint m_flags<para><emphasis>EPOLL flags for file descriptor.</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int m_fd<para><emphasis>I/O file descriptor number.</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>cbfunc m_f<para><emphasis>I/O call-back function reference.</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>ctx_appdt_t m_data<para><emphasis>reference to application data</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool m_active<para><emphasis>activity flag of file descriptor</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool m_deleted<para><emphasis>deleted flag of file descriptor</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>const char * m_info<para><emphasis>additional info provided by application</emphasis></para></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a7d7874417d2747eeb99b74c44b89bb97">MpxDescriptor</link> (
uint flags, int fd, <link linkend="d3/d40/classmpx_1_1_mpx_running_context_1a31a2ee430aae6ae753f629045bbc03e7">cbfunc</link> f, <link linkend="d8/d67/namespacempx_1a405b26d5c58c1ff17c6d641040913a23">ctx_appdt_t</link> appdata, const char * info)<para><emphasis>create an instance of I/O handler</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1af7e32d8ab16036e1321d8aa9e7980ff2">flags</link> (
uint flags)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>uint <link linkend="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a701bd914583e4ac98a23969f3eb0c204">flags</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a1b816351ad404fd3337dceee8f76a702">fd</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="d3/d40/classmpx_1_1_mpx_running_context_1a31a2ee430aae6ae753f629045bbc03e7">cbfunc</link> <link linkend="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1ac4bba919f077a31b39dc9265703f2efc">f</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a139e1b6f3a61b494939b6aa5a866bbb3">f</link> (
<link linkend="d3/d40/classmpx_1_1_mpx_running_context_1a31a2ee430aae6ae753f629045bbc03e7">cbfunc</link> p_f)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="d8/d67/namespacempx_1a405b26d5c58c1ff17c6d641040913a23">ctx_appdt_t</link> <link linkend="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1abcf53008e848c6282276a7941fb32991">data</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a27cd1c6761ab9bf938532eb8e982b022">data</link> (
<link linkend="d8/d67/namespacempx_1a405b26d5c58c1ff17c6d641040913a23">ctx_appdt_t</link> p_data)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>const char * <link linkend="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1ad48c08a7fcf87dbbe1abc34cb9c4941d">info</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1af3384e5dafda26c3759fc07ad791dbe0">active</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a7d867352142f2c85c0d837d7d76a6163">active</link> (
bool p_active)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>bool <link linkend="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a738a39c5523cfe0dd7669b7fdc962d91">deleted</link> (
void )<para><emphasis>gets deleted flag</emphasis></para>
</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a988bd991ad1427bb6a2feaada9f21ac9">deleted</link> (
bool p_deleted)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>

<para>I/O handler class. </para>
    </simplesect>
        <simplesect>
            <title>Detailed Description</title>

<para>this class is associated with call-back functions used to deal with I/O activity of open file descriptors. Instances of this class are named I/O handlers by convenience.</para>

<para>Every I/O descriptor can be marked active or/and deleted:</para>

<para><itemizedlist>
<listitem>
<para>I/O activity for I/O descriptors marked deleted (m_deleted = true) will not be observed any more. Such descriptor will be deleted as soon as possible, never at the middle of I/O multiplexer main loop, but always at the beginning of next iteration</para>
</listitem><listitem>
<para>I/O activity for I/O descriptors marked as inactive (m_active = false) will be temporary suspended and resumed when activated again. </para>
</listitem></itemizedlist>
</para>
                <para>Definition at line 368 of file MpxRunningContext.h</para>
                <para>The Documentation for this struct was generated from the following file: </para>
                <para><itemizedlist><listitem><para>MpxRunningContext.h</para></listitem></itemizedlist></para>
        </simplesect>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a7d7874417d2747eeb99b74c44b89bb97">
                <title>mpx::MpxRunningContext::MpxDescriptor::MpxDescriptor (uint flags, int fd, cbfunc f, ctx_appdt_t appdata, const char *info=0)</title> <emphasis>create an instance of I/O handler</emphasis>
                
<para>it saves these information within an instance of I/O handler:</para>

<para><itemizedlist>
<listitem>
<para>flags - EPOLL flags: EPOLLIN for input activity, EPOLLOUT for output activity. There should be other EPOLL flags too, especially EPOLLHUP which indicates broken connection, etc.</para>
</listitem><listitem>
<para>fd - open file descriptor</para>
</listitem><listitem>
<para>f - call-back function, which will deal with I/O activity on fd</para>
</listitem><listitem>
<para>appdata - general pointer provided by application and is thus interpreted by application itself when call-back function gets called</para>
</listitem><listitem>
<para>info - additional information provided by application which should be written to console by <link linkend="d3/d40/classmpx_1_1_mpx_running_context_1a02c764f877ebb6a92a24b939bbbdcc75">stat()</link></para>
</listitem></itemizedlist>
</para>

<para>Above fd (file descriptor) and f (call-back function) are frequently said to be associated with I/O handler containing them and they are occasionally used interchangeably </para>

            </section>
            <section xml:id="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1af7e32d8ab16036e1321d8aa9e7980ff2">
                <title>void mpx::MpxRunningContext::MpxDescriptor::flags (uint flags)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a701bd914583e4ac98a23969f3eb0c204">
                <title>uint mpx::MpxRunningContext::MpxDescriptor::flags (void)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a1b816351ad404fd3337dceee8f76a702">
                <title>int mpx::MpxRunningContext::MpxDescriptor::fd (void)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1ac4bba919f077a31b39dc9265703f2efc">
                <title>cbfunc mpx::MpxRunningContext::MpxDescriptor::f (void)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a139e1b6f3a61b494939b6aa5a866bbb3">
                <title>void mpx::MpxRunningContext::MpxDescriptor::f (cbfunc p_f)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1abcf53008e848c6282276a7941fb32991">
                <title>ctx_appdt_t mpx::MpxRunningContext::MpxDescriptor::data (void)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a27cd1c6761ab9bf938532eb8e982b022">
                <title>void mpx::MpxRunningContext::MpxDescriptor::data (ctx_appdt_t p_data)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1ad48c08a7fcf87dbbe1abc34cb9c4941d">
                <title>const char* mpx::MpxRunningContext::MpxDescriptor::info (void)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1af3384e5dafda26c3759fc07ad791dbe0">
                <title>bool mpx::MpxRunningContext::MpxDescriptor::active (void)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a7d867352142f2c85c0d837d7d76a6163">
                <title>void mpx::MpxRunningContext::MpxDescriptor::active (bool p_active)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a738a39c5523cfe0dd7669b7fdc962d91">
                <title>bool mpx::MpxRunningContext::MpxDescriptor::deleted (void)</title> <emphasis>gets deleted flag</emphasis>
                
            </section>
            <section xml:id="d3/d03/classmpx_1_1_mpx_running_context_1_1_mpx_descriptor_1a988bd991ad1427bb6a2feaada9f21ac9">
                <title>void mpx::MpxRunningContext::MpxDescriptor::deleted (bool p_deleted)</title> <emphasis></emphasis>
                
            </section>
</section>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="dc/d8c/classmpx_1_1_mpx_task_base">
<title>mpx::MpxTaskBase class Reference</title>
<para>
    <programlisting>#include <link linkend="d4/daa/_mpx_task_base_8h">&lt;MpxTaskBase.h&gt;</link></programlisting>
</para>
<para>Inheritance diagram for mpx::MpxTaskBase</para>
<para>
    <figure>
        <title>Inheritance graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="../../db/d3e/classmpx_1_1_mpx_task_base__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Collaboration diagram for mpx::MpxTaskBase</para>
<para>
    <figure>
        <title>Collaboration graph</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="../../db/dc9/classmpx_1_1_mpx_task_base__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef pair&lt; <link linkend="d8/d67/namespacempx_1a692bb0ec7128e8fe0d634b5b0cd78dc2">evnfunc</link>, <link linkend="d8/d67/namespacempx_1a7d5a7e844fa58dd87c7f786a25be6402">mpx_appdt_t</link> &gt;  <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a63dc054c214e8d1c65634a7ca55685f2">evndata</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>typedef map&lt; <link linkend="d8/d67/namespacempx_1a7f595d9e5073e285e3143f87653ae7ed">evnkey</link>, evndata, <link linkend="d2/d00/classmpx_1_1evncmp">evncmp</link> &gt;  <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1aec82ebb52b096bfcbaafe5b81964f1cc">evnset</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const char * g_protocolField</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const char * g_protocolLocal</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const char * g_protocolTcp4</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const char * g_protocolTcp6</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const char * g_pathField</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const char * g_portField</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const char * g_nameField</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const char * g_hostnameField</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int g_sentCount</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static bool g_enableSend</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Private Attributes</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>tskmpx_t m_mpx</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>string m_name</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>MpxTaskState m_state</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>evnset m_evnset</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1abbce024b8824556e8ee37348ed8a0c83">MpxTaskBase</link> (
const char * name)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>virtual <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1ac6cc2a5b12959867a6d58390b455696f">~MpxTaskBase</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a9befb1f09352f9820b9b153850d75adb">Dispose</link> (
bool release)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a1af10a45d6be9d40496729e36c71c9bf">Send</link> (
<link linkend="dc/d8c/classmpx_1_1_mpx_task_base">MpxTaskBase</link> * task, <link linkend="d9/dfd/classmpx_1_1_mpx_event_base">MpxEventBase</link> * event, bool invoke)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a6eec6320c433f50bbcb4daa24e96af9d">RegisterEventHandlers</link> (
<link linkend="da/d30/structmpx_1_1_event_descriptor">EventDescriptor</link> evntab)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>evndata <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a470093fbccfc37dddde4618947eb9fc0">RetrieveEventHandler</link> (
u_int state, u_int event)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a191e3e85add4e9700a5b9a179ad27478">RetrieveExternalTask</link> (
const char * connString)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a6856f2ece041a745f2195ab4009b43a3">HandleEvent</link> (
<link linkend="d9/dfd/classmpx_1_1_mpx_event_base">MpxEventBase</link> * event)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="d8/d67/namespacempx_1a508b717b61afcc9f029617db2b3ea22f">MpxTaskState</link> <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a41779a9c31aa8ac15a43d810062306d9">state</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a765491d8df0b02051447097c6e75f22f">state</link> (
<link linkend="d8/d67/namespacempx_1a508b717b61afcc9f029617db2b3ea22f">MpxTaskState</link> state)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><link linkend="d8/d67/namespacempx_1abf853c00938b0039892eb7fde35ad629">tskmpx_t</link> <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1ad3f1b641595a14cc5efb0ee228d2249b">mpx</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1ac6dab776121d77c6cbb845359976ae82">mpx</link> (
<link linkend="d8/d67/namespacempx_1abf853c00938b0039892eb7fde35ad629">tskmpx_t</link> mpx)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>const char * <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a72a5b4dcb94f36194d986d447e52ba94">name</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct timespec <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a2d03188176c57fcb179ffe532124aa40">GetCurrentTime</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void * <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a7a7a3e7252b8ebffa9910338b73a0674">StartTimer</link> (
struct timespec timerStamp)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a1bf98fdf9f1a27c34fe0f85504213081">StopTimer</link> (
void * timer)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a7ce0cfa5308c55280c1b6a074f8f553b">EnableSend</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a1f709227a9bb771bfa23f85e4f281c2f">DisableSend</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1aa6b5589b8317e64f8edf4e097a853eeb">sentCount</link> (
)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title></title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>evndata <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a89bf5c45bfde684a96d97ac7e8355d9c">RegisterEventHandler</link> (
unsigned int stateCode, unsigned int eventCode, <link linkend="d8/d67/namespacempx_1a692bb0ec7128e8fe0d634b5b0cd78dc2">evnfunc</link> f, <link linkend="d8/d67/namespacempx_1a7d5a7e844fa58dd87c7f786a25be6402">mpx_appdt_t</link> data)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a0e2cb855ebfed966dc82bb8bb3461a77">RetrieveExternalTaskLocal</link> (
const char * connString)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a3dd5d5e0a81c544b98dbae7eca97ae61">RetrieveExternalTaskTcp4</link> (
const char * connString)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="dc/d8c/classmpx_1_1_mpx_task_base_1a66e319c2eb1a5da5644a481c52293078">RetrieveExternalTaskTcp6</link> (
const char * connString)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a63dc054c214e8d1c65634a7ca55685f2">
                <title>typedef pair&lt;evnfunc, mpx_appdt_t&gt; mpx::MpxTaskBase::evndata</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1aec82ebb52b096bfcbaafe5b81964f1cc">
                <title>typedef map&lt;evnkey, evndata, evncmp&gt; mpx::MpxTaskBase::evnset</title> <emphasis></emphasis>
                
            </section>
        <section>
            <title>Member Data Documentation</title>
        </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1abbce024b8824556e8ee37348ed8a0c83">
                <title>mpx::MpxTaskBase::MpxTaskBase (const char *name=0)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1ac6cc2a5b12959867a6d58390b455696f">
                <title>mpx::MpxTaskBase::~MpxTaskBase ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a9befb1f09352f9820b9b153850d75adb">
                <title>void mpx::MpxTaskBase::Dispose (bool release)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a1af10a45d6be9d40496729e36c71c9bf">
                <title>int mpx::MpxTaskBase::Send (MpxTaskBase *task, MpxEventBase *event, bool invoke=false)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a6eec6320c433f50bbcb4daa24e96af9d">
                <title>void mpx::MpxTaskBase::RegisterEventHandlers (EventDescriptor evntab[])</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a470093fbccfc37dddde4618947eb9fc0">
                <title>MpxTaskBase::evndata mpx::MpxTaskBase::RetrieveEventHandler (u_int state, u_int event)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a191e3e85add4e9700a5b9a179ad27478">
                <title>int mpx::MpxTaskBase::RetrieveExternalTask (const char *connString)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a6856f2ece041a745f2195ab4009b43a3">
                <title>int mpx::MpxTaskBase::HandleEvent (MpxEventBase *event)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a41779a9c31aa8ac15a43d810062306d9">
                <title>MpxTaskState mpx::MpxTaskBase::state ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a765491d8df0b02051447097c6e75f22f">
                <title>void mpx::MpxTaskBase::state (MpxTaskState state)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1ad3f1b641595a14cc5efb0ee228d2249b">
                <title>tskmpx_t mpx::MpxTaskBase::mpx ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1ac6dab776121d77c6cbb845359976ae82">
                <title>void mpx::MpxTaskBase::mpx (tskmpx_t mpx)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a72a5b4dcb94f36194d986d447e52ba94">
                <title>const char* mpx::MpxTaskBase::name ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a2d03188176c57fcb179ffe532124aa40">
                <title>struct timespec mpx::MpxTaskBase::GetCurrentTime ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a7a7a3e7252b8ebffa9910338b73a0674">
                <title>void * mpx::MpxTaskBase::StartTimer (struct timespec timerStamp)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a1bf98fdf9f1a27c34fe0f85504213081">
                <title>void mpx::MpxTaskBase::StopTimer (void *timer)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a7ce0cfa5308c55280c1b6a074f8f553b">
                <title>static void mpx::MpxTaskBase::EnableSend ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a1f709227a9bb771bfa23f85e4f281c2f">
                <title>static void mpx::MpxTaskBase::DisableSend ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1aa6b5589b8317e64f8edf4e097a853eeb">
                <title>static int mpx::MpxTaskBase::sentCount ()</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a89bf5c45bfde684a96d97ac7e8355d9c">
                <title>MpxTaskBase::evndata mpx::MpxTaskBase::RegisterEventHandler (unsigned int stateCode, unsigned int eventCode, evnfunc f, mpx_appdt_t data)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a0e2cb855ebfed966dc82bb8bb3461a77">
                <title>int mpx::MpxTaskBase::RetrieveExternalTaskLocal (const char *connString)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a3dd5d5e0a81c544b98dbae7eca97ae61">
                <title>int mpx::MpxTaskBase::RetrieveExternalTaskTcp4 (const char *connString)</title> <emphasis></emphasis>
                
            </section>
            <section xml:id="dc/d8c/classmpx_1_1_mpx_task_base_1a66e319c2eb1a5da5644a481c52293078">
                <title>int mpx::MpxTaskBase::RetrieveExternalTaskTcp6 (const char *connString)</title> <emphasis></emphasis>
                
            </section>
</section>
